name: Repo

on:
  workflow_dispatch:
  schedule:
    - cron: '47 8 */10 * *'
  push:
    # branches:
    #   - main
    paths:
      - packages.txt
      # - patches/**

concurrency:
  group: repo
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base
      options: --privileged

    steps:
      - shell: bash
        run: |
          useradd -m builder
          rm -r /__t/*
          mount /dev/root /mnt
          chroot /mnt bash
          # https://github.com/NobuoTsukamoto/my_actions_test/blob/main/.github/workflows/test_contains.yml
          sudo rm -rf "/home/work/*" || true
          sudo rm -rf "/opt/*" || true
          sudo rm -rf "/usr/share/dotnet" || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
          sudo rm -rf "/usr/local/lib/android" || true
          sudo rm -rf "/usr/local/share/boost" || true
          sudo rm -rf "/usr/lib/jvm" || true
          sudo rm -rf "/usr/share/swift" || true
          sudo rm -rf "/usr/local/julia*" || true
          sudo rm -rf "/usr/share/kotlinc" || true
          sudo rm -rf "/usr/local/share/edge_driver" || true
          sudo rm -rf "/usr/local/share/chromedriver-linux64" || true
          sudo rm -rf "/usr/local/share/gecko_driver" || true
          sudo rm -rf "/usr/share/miniconda" || true
          sudo rm -rf "/usr/local/share/phantomjs*" || true
          sudo rm -rf "/usr/share/sbt" || true
          sudo rm -rf "/usr/local/sqlpackage" || true
          sudo rm -rf "/usr/bin/yq" || true
          sudo rm -rf "/usr/local/share/vcpkg" || true
          sudo rm -rf "/usr/local/bin/terraform" || true
          sudo rm -rf "/usr/local/bin/stack" || true
          sudo rm -rf "/usr/local/bin/aliyun" || true
          sudo rm -rf "/usr/local/bin/pulumi" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-dotnet" || true
          sudo rm -rf "/usr/local/bin/azcopy" || true
          sudo rm -rf "/usr/local/aws-cli" || true
          sudo rm -rf "/usr/local/bin/bicep" || true
          sudo rm -rf "/usr/local/bin/rebar3" || true
          sudo rm -rf "/usr/local/bin/phpunit" || true
          sudo rm -rf "/usr/local/bin/packer" || true
          sudo rm -rf "/usr/local/bin/bicep" || true
          sudo rm -rf "/usr/local/bin/docker-compose" || true
          sudo rm -rf "/home/.dotnet/tools" || true
          sudo rm -rf "/etc/skel/.dotnet/tools" || true
          sudo rm -rf "/usr/local/bin/minikube" || true
          sudo rm -rf "/usr/local/bin/kustomize" || true
          sudo rm -rf "/usr/local/bin/kubectl" || true
          sudo rm -rf "/usr/local/bin/kind" || true
          sudo rm -rf "/usr/local/bin/helm" || true
          sudo rm -rf "/home/linuxbrew" || true
          sudo rm -rf "/usr/share/apache-maven-3.8.8" || true
          sudo rm -rf "/usr/share/gradle-8.7" || true
          sudo rm -rf "/usr/local/share/phantomjs-8.6" || true
          sudo rm -rf "/usr/local/bin/azcopy_11.3.1" || true
          sudo rm -rf "/usr/local/bin/bicep" || true
          sudo rm -rf "/usr/local/bin/.ghcup" || true
          sudo rm -rf "/usr/local/.ghcup" || true
          sudo rm -rf "/home/.nvm" || true
          sudo rm -rf "/usr/bin/composer" || true
          sudo rm -rf "/usr/local/bin/phpunit" || true
          sudo rm -rf "/usr/local/bin/pulumi-analyzer-policy" || true
          sudo rm -rf "/usr/local/bin/pulumi-analyzer-policy-python" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-java" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-nodejs" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-go" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-python" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-python-exec" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-yaml" || true
          sudo rm -rf "/usr/local/bin/pulumi-resource-pulumi-nodejs" || true
          sudo rm -rf "/usr/local/bin/pulumi-resource-pulumi-python" || true
          sudo rm -rf "/usr/local/bin/pulumi-watch" || true
          sudo rm -rf "/usr/local/bin/oc" || true
          sudo rm -rf "/usr/local/bin/ctest" || true
          sudo rm -rf "/usr/local/bin/cmake-gui" || true
          sudo rm -rf "/usr/local/bin/ccmake" || true
          sudo rm -rf "/usr/local/bin/cpack" || true
          sudo rm -rf "/usr/local/bin/oras" || true
          sudo rm -rf "/usr/local/share/emacs" || true
          sudo rm -rf "/usr/local/share/fonts" || true
          sudo rm -rf "/usr/local/share/icons" || true
          sudo rm -rf "/usr/local/share/man" || true
          sudo rm -rf "/usr/local/share/chromium" || true
          sudo rm -rf "/usr/local/share/powershell" || true
          sudo rm -rf "/usr/local/share/doc" || true
          sudo rm -rf "/home/perflog" || true
          sudo rm -rf "/usr/libexec/docker/cli-plugins" || true
          sudo rm -rf "/usr/bin/docker-credential-ecr-login" || true
          sudo rm -rf "/usr/local/lib/lein" || true
          sudo docker image prune --all --force
          sudo npm uninstall bazel || true
          sudo npm uninstall bazelisk || true
          rustup self uninstall -y
          sudo apt purge \
            ansible \
            aria2 \
            azure-cli \
            cabal* \
            clang* \
            dotnet-sdk* \
            ghc* \
            google-chrome-stable \
            kubectl \
            mysql* \
            node* \
            npm* \
            php* \
            powershell \
            rpm \
            ruby* \
            subversion \
            yarn \
            firefox \
            mono-complete \
            nuget \
            apache2 \
            moby-engine \
            moby-cli \
            moby-buildx \
            moby-compose \
            microsoft-edge-stable \
            mongodb* \
            nginx \
            postgresql* \
            libpq-dev \
            r-base \
            sphinxsearch \
            swig \
            tcl \
            temurin-* \
            skopeo \
            imagemagick-* \
            mssql-tools* \
            unixodbc-dev \
            ubuntu-advantage-tools \
            docker-* \
            fonts-* \
            llvm-* \
            javascript-common \
            openjdk-11-jre-headless \
            linux-cloud-tools* \
            linux-azure-6.2-* \
            hicolor-icon-theme \
            gcc-9 \
            gcc-10 \
            gcc-11 \
            gcc-12 \
            cloud-initramfs* \
            x11-* \
            bind9-* \
            cloud-* \
            gir1.2-* \
            golang-github-* \
            libjs-* \
            libllvm* \
            nano \
            python3-* \
            podman \
            buildah \
            skopeo \
            temurin-* \
            ant \
            ant-optional \
            libmysqlclient-dev \
            libxft-dev \
            libfreetype6-dev \
            libfontconfig1-dev \
            libpq-dev \
            tcl* \
            p7zip* \
            gfortran-13 \
            gcc-12-* \
            gcc-11-* \
            google-cloud-cli \
            heroku \
            snmp \
            liblz4-dev \
            man-db \
            packages-microsoft-prod \
            perl \
            *-dev \
            linux-headers-* \
            manpages \
            -yq || true
          sudo dpkg -r packages-microsoft-prodã€€> /dev/null 2>&1 || true
          sudo apt-get autoremove -y > /dev/null 2>&1 || true
          sudo apt-get autoclean -y > /dev/null 2>&1 || true

      - uses: actions/cache/restore@v4
        with:
          path: |
            /__w/auto-aur/auto-aur
            /var/cache/pacman/pkg
            /home/builder/.cache
          key: cache-${{ github.sha }}
          restore-keys: cache-

      - shell: bash
        run: |
          pacman --noconfirm -Syu
          pacman --noconfirm -S git
          git config --global --add safe.directory $PWD

      - uses: actions/checkout@v4

      - name: Setup (root)
        run: scripts/setup-root.sh
        shell: bash

      - name: Setup (builder)
        run: sudo -E -u builder bash ./scripts/setup-builder.sh
        shell: bash
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}


      - name: Build AUR
        run: sudo -u builder bash -ex scripts/build.sh

      # - uses: mxschmitt/action-tmate@v3
      #   if: ${{ failure() }}

      - name: Generate UI
        shell: bash
        run: python scripts/genui.py

      - name: Git
        shell: bash
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "Data"
            git push
          fi
          git clean -ffdx
          git reset --hard HEAD

      - uses: actions/cache/save@v4
        if: ${{ !cancelled() }}
        with:
          path: |
            /__w/auto-aur/auto-aur
            /var/cache/pacman/pkg
            /home/builder/.cache
          key: cache-${{ github.sha }}

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "public/"

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - run: echo "/__e/node20/bin" >> $GITHUB_PATH
        shell: bash

      - uses: FirebaseExtended/action-hosting-deploy@v0.9.0
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: auto-aur
          channelId: live
