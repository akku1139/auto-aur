name: Repo

on:
  workflow_dispatch:
    inputs:
      tmate:
        type: boolean
        description: 'SSH debug'
        required: false
        default: false
      cmd:
        type: string
        description: 'Custom commands'
        required: false
        default: ""

  schedule:
    - cron: '47 8 * * *'
  push:
    # branches:
    #   - main
    paths:
      - packages.txt
      # - patches/**

concurrency:
  group: repo
  # cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  main:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base
      options: --privileged

    steps:
      - name: Pre Setup
        run: |
          set -x

          # add builder user
          useradd -m builder

          # mount host disk
          mkdir /ext
          if [ "/dev/sda1" = $( mount | grep -F "/__e" | cut -d " " -f1 ) ]; then
            mount /dev/sdb1 /ext
          else
            mount /dev/sda1 /ext
          fi
          ls /ext

          # builder setup
          mkdir /ext/builder
          chown builder:builder /ext/builder

          # tidy up
          lsblk
          df -h

          # language support?
          rm -r /__t/*

          mount /dev/root /mnt
          curl -L https://github.com/akku1139/auto-aur/raw/refs/heads/main/scripts/tidyup.sh > /mnt/tidyup.sh
          chmod 777 /mnt/tidyup.sh
          chroot /mnt /tidyup.sh &
          
          # move swap
          swapoff /ext/swapfile
          rm /ext/swapfile
          fallocate -l 8GB /swapfile
          chmod 0600 /swapfile
          mkswap /swapfile
          losetup -f /swapfile
          swapon $( losetup -a| grep -F "/swapfile" | cut -d: -f1 )

          df -h

      - uses: actions/cache/restore@v4
        with:
          path: | # Must be synchronized with save
            /__w/auto-aur/auto-aur
            /var/cache/pacman/pkg
            /home/builder/.cache
            /home/builder/.cargo
            /home/builder/.ccache
            /home/builder/go
            /home/builder/.dub
            /home/builder/.cabal
          key: cache-${{ github.sha }}
          restore-keys: cache-

      - uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.tmate }}
        with:
          detached: true

      - run: |
          pacman --noconfirm -Syu
          pacman --noconfirm -S git
          git config --global --add safe.directory $PWD

      - uses: actions/checkout@v4

      - name: Setup (root)
        run: scripts/setup-root.sh

      - name: Setup (builder)
        run: sudo -E -u builder bash ./scripts/setup-builder.sh
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
 
      - name: Custom commands
        if: ${{ inputs.commands != "" }}
        run: ${{ inputs.commands }}

      - name: Build AUR
        run: sudo -u builder bash -ex scripts/build.sh

      - name: Generate UI
        run: python scripts/genui.py

      - name: Git
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git pull
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "Data"
            git push
          fi
          git clean -ffdx
          git reset --hard HEAD

      - uses: actions/cache/save@v4
        if: ${{ !cancelled() }}
        with:
          path: |
            /__w/auto-aur/auto-aur
            /var/cache/pacman/pkg
            /home/builder/.cache
            /home/builder/.cargo
            /home/builder/.ccache
            /home/builder/go
            /home/builder/.dub
            /home/builder/.cabal
          key: cache-${{ github.sha }}

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "public/"

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - run: echo "/__e/node20/bin" >> $GITHUB_PATH

      - uses: FirebaseExtended/action-hosting-deploy@v0.9.0
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: auto-aur
          channelId: live

      # - uses: mxschmitt/action-tmate@v3
      #   if: ${{ ( failure() ) && ! ( github.event_name == 'workflow_dispatch' && inputs.tmate ) }}
